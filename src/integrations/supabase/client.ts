
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { safeSupabase } from '@/utils/supabaseHelpers';

const SUPABASE_URL = "https://avdgyrepwrvsvwgxrccr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF2ZGd5cmVwd3J2c3Z3Z3hyY2NyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM2MzgwODIsImV4cCI6MjA1OTIxNDA4Mn0.8MZ2etAhQ1pTJnK84uoqAFfUirv_kaoYcmKHhKgLAWU";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Type-safe wrapper for querying tables that might not be in the generated types
 * If the feature flag for that table's feature is disabled, it returns a mock response
 * 
 * @param tableName The name of the table to query
 * @returns A query builder for the specified table
 */
export const safeQuery = <T = any>(tableName: string) => {
  console.log(`Using safeQuery for table: ${tableName}`);
  
  // Check if this table is in our list of mock tables (optional)
  return safeSupabase.from(tableName) as any as T;
};
